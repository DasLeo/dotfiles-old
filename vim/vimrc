" ==========================================================
" Vundle stuff
" ==========================================================
set nocompatible              " be iMproved, required
filetype off                  " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" List of plugins
Plugin 'VundleVim/Vundle.vim'
Plugin 'davidhalter/jedi-vim'

call vundle#end()            " required
filetype plugin indent on    " required
" ==========================================================

" use defaults (skipped as soon as .vimrc exists)
source $VIMRUNTIME/defaults.vim

" Use macOS clipboard when yank and paste
set clipboard=unnamed

" Enable line numbers
set number

" always show status line
set laststatus=2

" always show tab line
set showtabline=2

" add (+=) the dash ("-") to word selection
set iskeyword+=-

" split vertically to the right and horizontally below
set splitright
set splitbelow

" Scroll by 2 lines instead of 1
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>

" ==========================================================
"                         netrw
" ==========================================================
" netrw file selector mode 1 (shows date and filesize)
"let g:netrw_liststyle=1

" Remove the banner of the netrw file selector
let g:netrw_banner=0

" Size of netrw file selector 20%
let g:netrw_winsize = 20

" netrw open in previous window
"let g:netrw_browse_split=4
" netrw open in a new vertical split
let g:netrw_browse_split=2

" open files with 'v' in a righthand side pane instead of lefthand side
let g:netrw_altv = 1

" open netrw file selector automatically
"augroup ProjectDrawer
"  autocmd!
"  autocmd VimEnter * :Vexplore
"augroup END
" ==========================================================

" ==========================================================
"                         NERDTree
" ==========================================================
" CTRL+n for NERDTree
map <C-n> :NERDTreeToggle<CR>

" open NERDTree when no file is specfied
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" ==========================================================

" powerline
set rtp+=/usr/local/lib/python3.8/site-packages/powerline/bindings/vim
set t_Co=256

" Load Color scheme:
" https://github.com/altercation/vim-colors-solarized
syntax enable
set background=dark
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme solarized

" vim-gitgutter reset sign columns color
highlight! link SignColumn LineNr

" Set faster update time to update screen e.g. on writing files (100ms)
set updatetime=100 

" Solarized colors for VIM integrated terminal (ter/term)
hi Terminal ctermfg=fg ctermbg=NONE guifg=fg guibg=NONE guisp=NONE cterm=NONE gui=NONE

" Show full line on cursor
set cursorline
" Show column at character 80 to prevent long lines
" alternative: cc / so to disable set cc=
set colorcolumn=80

" Include all whitespace characters if list is enabled
" using: set list
set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣

" Fix wrong indentation in yaml
autocmd FileType yaml,yml setlocal ts=2 sts=2 sw=2 expandtab indentkeys-=0# indentkeys-=<:>

set noshowmode  " to get rid of thing like --INSERT--
set noshowcmd  " to get rid of display of last command
set shortmess+=F  " to get rid of the file name displayed in the command line bar

" Run current buffer in Python 3
autocmd FileType python map <buffer> <F9> :w<CR>:exec '!python3' shellescape(@%, 1)<CR>
autocmd FileType python imap <buffer> <F9> <esc>:w<CR>:exec '!python3' shellescape(@%, 1)<CR>
